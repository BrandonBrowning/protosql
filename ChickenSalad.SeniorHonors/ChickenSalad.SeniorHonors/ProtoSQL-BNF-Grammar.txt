
; Assumed symbols:
;   <EOL>
;   <EOF>
;   <int>
;   <float>
;   <space>
;   <sql-string-text> ; For simplicity, the allowed sql text between single quote (')'s in a string
;   <tab>
; Note: No strings are escaped; instead these symbols are used

<proto-sql> ::= 
	<data-expr> <spacing-newline>
	<where-list> <opt-spacing-newline>
	<order-by-list> <opt-spacing-newline>
	<select-list>

<data-expr> ::= <table> ; TODO: Support joins etc

<where-list> ::= "" | <where> <where-list>
<where> ::= "?" <where-id> | "?" <value-expr>
<where-id> ::= <int> | <tuple>

<order-by-list> ::= "" | <order-by> <order-by-list>
<order-by> ::= <order-by-type> <opt-spacing> <column> <opt-spacing-newline>
<order-by-type> ::= "//" | "\\"

<select-list> ::= "" | "{" <opt-spacing-newline> <select-list-inner> <opt-spacing-newline> "}"
<select-inner> ::= <select> | <select> <select-list> ""
<select> ::= <column> | <select-assignment>
<select-assignment> ::= <ident-or-bracket> <opt-spacing> <value-expr> <opt-spacing-newline>
<select-assignment-end> ::= <opt-spacing> ";" <opt-spacing> | <opt-spacing> <EOL> <opt-spacing>

<column> ::= <tri-string-tuple>
<table> ::= <tri-string-tuple>
<tri-string> ::=
	<ident-or-bracket>
	| <ident-or-bracket> "." <ident-or-bracket>
	| <ident-or-bracket> "." <ident-or-bracket> "." <ident-or-bracket>

<tuple> ::= "(" <tuple-body> ")"
<tuple-body> ::= <value-expr> | <value-expr> <multi-tuple-body>
<multi-tuple-body> ::= <multi-tuple-body-part> "" | <multi-tuple-body> <multi-tuple-body>
<multi-tuple-body-part> ::=  "," <opt-spacing> <value-expr> <opt-spacing>

<value-expr> ::= <primative> | <binary-op> | <f-call>
<primative> ::=  <string> | <int> | <float> | <literal>
<string> ::= "'" <sql-string-text>  "'"
<literal> ::= <ident>
<binary-op> ::= <value-expr> <opt-spacing> <binary-op-name> <opt-spacing> <value-expr>
<binary-op-name> ::= "+" | "-" | "*" | "/" ; TODO: Support more binary-ops
<f-call> ::= <ident> <tuple>

<opt-spacing> ::= "" | <spacing>
<spacing> ::= <spacing-char> | <spacing-char> <spacing> ""
<spacing-char> ::= <space> | <tab>

<opt-spacing-newline> ::= "" | <spacing-newline>
<spacing-newline> ::= 
	<spacing-newline-char>
	| <spacing-newline> ""
	| <spacing-newline> <spacing-newline>
<spacing-newline-char> ::= <EOL> | <spacing-char>

<ident-or-bracket> ::= <ident> | <bracket-ident>

<bracket-ident> ::= "[" <bracket-ident-body> "]"
<bracket-ident-body> ::= <bracket-ident-part> | <bracket-ident-part> <bracket-ident-body> ""
<bracket-ident-part> ::= <digit-letter> | <bracket-ident-symbol>
<bracket-ident-symbol> ::= <spacing> | "." | "/" | "\"

<ident> ::= <ident-head> <ident-tail>
<ident-head> ::= "_" | <letter>
<ident-tail> ::= "" | <digit-letter> <ident-tail>

<digit-letter> ::= <letter> | <digit>
<digit> ::= "0" | "1" | "2" | ... | "9"
<letter> ::= <lower-letter> | <upper-letter>
<lower-letter> ::= "a" | "b" | ... | "z"
<upper-letter> ::=  "A" | "B" | ... | "Z"